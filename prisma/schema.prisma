// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  password String
  tasks    Task[]
  List     List[]
}

model Task {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  isDone      Boolean  @default(false)
  isDeleted   Boolean  @default(false) // for trash
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  status      TaskStatus @default(NORMAL)
  dueDate     DateTime?
  
  userId      Int
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  List        List[]
}

enum TaskStatus {
  HIGH
  NORMAL
  LOW
}

model List {
  id     Int    @id @default(autoincrement())
  name   String
  // user info
  userId Int
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  taskId Int?
  Tasks  Task? @relation(fields: [taskId], references: [id], onDelete: Cascade)
}
